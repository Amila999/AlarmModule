@page
@model AlarmModule.Pages.AcknowledgedAlarmsModel
@{
}

<style>
    .high-severity {
        background-color: #ffcccc;
    }

    .low-severity {
        background-color: transparent;
    }
</style>

<div class="text-center">
    <h1 class="display-4">Acknowledged Alarms</h1>
    <p>Welcome @User.Identity.Name</p>
    <p>The Date and Time now is: <span id="currentDateTime">@DateTime.Now</span></p>

    <div class="mb-3">
        @if (User.Identity.IsAuthenticated)
        {
            <form method="post" asp-page-handler="Logout">
                <button type="submit" class="btn btn-danger">Logout</button>
            </form>
        }
    </div>

    <table class="table">
        <thead>
            <tr>
                <th>Alarm Id</th>
                <th>Activation Time</th>
                <th>Alarm Type</th>
                <th>Information</th>
                <th>Acknowledge Time</th>
                <th>Acknowledged Person</th>
                <th>Severity</th>
            </tr>
        </thead>
        <tbody id="alarm-table">
            @foreach (var alarm in Model.alarmList)
            {
                <tr class="@(alarm.Description == "High" ? "high-severity" : "low-severity")">
                    <td>@alarm.AlarmId</td>
                    <td>@alarm.ActivationTime</td>
                    <td>@alarm.AlarmType</td>
                    <td>@alarm.Information</td>
                    <td>@alarm.AcknowledgeTime</td>
                    <td>@alarm.Name</td>
                    <td>@alarm.Description</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        function updateDateTime() {
            const currentDateTimeElement = document.getElementById('currentDateTime');
            currentDateTimeElement.textContent = new Date().toLocaleString();
        }

        setInterval(updateDateTime, 1000);

        function updateTable() {
            fetch('/AcknowledgedAlarms?handler=Alarms')
                .then(response => response.json())
                .then(data => {
                    const tableBody = document.getElementById('alarm-table');
                    tableBody.innerHTML = '';

                    data.forEach(alarm => {
                        const row = document.createElement('tr');
                        row.className = alarm.description === 'High' ? 'high-severity' : 'low-severity';

                        const columns = [
                            alarm.alarmId,
                            alarm.activationTime,
                            alarm.alarmType,
                            alarm.information,
                            alarm.acknowledgeTime,
                            alarm.name,
                            alarm.description
                        ];

                        columns.forEach((value, index) => {
                            const cell = document.createElement('td');
                            cell.textContent = value;
                            row.appendChild(cell);
                        });
                        tableBody.appendChild(row);
                    });
                });
        }
        setInterval(updateTable, 2000);

    </script>
}