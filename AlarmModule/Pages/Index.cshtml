@page
@model IndexModel
@{
    ViewData["Title"] = "Active Alarm page";
}

<style>
    .high-severity {
        background-color: #ffcccc;
    }

    .low-severity {
        background-color: transparent;
    }
</style>

<div class="text-center">
    <h1 class="display-4">Active Alarms</h1>
    <p>Welcome @User.Identity.Name</p>
    <p>The Date and Time now is: <span id="currentDateTime">@DateTime.Now</span></p>

    <div class="mb-3">
        @if (User.Identity.IsAuthenticated)
        {
            <form method="post" asp-page-handler="Logout">
                <button type="submit" class="btn btn-danger">Logout</button>
            </form>
        }
    </div>

    <table class="table">
        <thead>
            <tr>
                <th>Alarm Id</th>
                <th>Activation Time</th>
                <th>Alarm Type</th>
                <th>Information</th>
                <th>Acknowledge Time</th>
                <th></th>
                <th>Severity</th>
            </tr>
        </thead>
        <tbody id="alarm-table">
            @foreach (var alarm in Model.alarmList)
            {
                <tr class="@(alarm.Description == "High" ? "high-severity" : "low-severity")">
                    <td>@alarm.AlarmId</td>
                    <td>@alarm.ActivationTime</td>
                    <td>@alarm.AlarmType</td>
                    <td>@alarm.Information</td>
                    <td>@alarm.AcknowledgeTime</td>
                    <td>
                        @if (string.IsNullOrEmpty(alarm.Name))
                        {
                            <button class="btn btn-primary" onclick="acknowledgeAlarm('@alarm.AlarmId', '@User.Identity.Name')">Acknowledge</button>
                        }
                    </td>
                    <td>@alarm.Description</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        function updateDateTime() {
            const currentDateTimeElement = document.getElementById('currentDateTime');
            currentDateTimeElement.textContent = new Date().toLocaleString();
        }

        setInterval(updateDateTime, 1000);

        function updateTable() {
            fetch('/Index?handler=Alarms')
                .then(response => response.json())
                .then(data => {
                    const tableBody = document.getElementById('alarm-table');
                    tableBody.innerHTML = '';

                    data.forEach(alarm => {
                        const row = document.createElement('tr');
                        row.className = alarm.description === 'High' ? 'high-severity' : 'low-severity';

                        const columns = [
                            alarm.alarmId,
                            alarm.activationTime,
                            alarm.alarmType,
                            alarm.information,
                            alarm.acknowledgeTime,
                            alarm.name,
                            alarm.description
                        ];

                        columns.forEach((value, index) => {
                            const cell = document.createElement('td');
                            cell.textContent = value;
                            row.appendChild(cell);

                            if (index === 5 && !alarm.name) {
                                const acknowledgeButton = document.createElement('button');
                                acknowledgeButton.className = 'btn btn-primary';
                                acknowledgeButton.textContent = 'Acknowledge';
                                acknowledgeButton.onclick = function () {
                                    acknowledgeAlarm(alarm.alarmId, '@User.Identity.Name');
                                };
                                cell.appendChild
                                cell.appendChild(acknowledgeButton);
                            }
                        });

                        tableBody.appendChild(row);
                    });
                });
        }
        setInterval(updateTable, 2000);

        function acknowledgeAlarm(alarmId, userId) {
            fetch(`/Index?handler=AcknowledgeAlarm&alarmId=${alarmId}&userId=${encodeURIComponent(userId)}`, {
                method: "POST",
                headers: {
                    "RequestVerificationToken": document.getElementsByName("__RequestVerificationToken")[0].value
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        console.log(`Acknowledged alarm with ID: ${alarmId}`);
                        console.log(`Name: ${userId}`);
                        updateTable();
                    } else {
                        console.error(`Failed to acknowledge alarm with ID: ${alarmId}`);
                    }
                });
        }

    </script>
}
